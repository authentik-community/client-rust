/*
 * authentik
 *
 * Making authentication simple.
 *
 * The version of the OpenAPI document: 2024.12.2
 * Contact: hello@goauthentik.io
 * Generated by: https://openapi-generator.tech
 */

use crate::models;
use serde::{Deserialize, Serialize};

/// CertificateGenerationRequest : Certificate generation parameters
#[derive(Clone, Default, Debug, PartialEq, Serialize, Deserialize)]
pub struct CertificateGenerationRequest {
    #[serde(rename = "common_name")]
    pub common_name: String,
    #[serde(rename = "subject_alt_name", skip_serializing_if = "Option::is_none")]
    pub subject_alt_name: Option<String>,
    #[serde(rename = "validity_days")]
    pub validity_days: i32,
    #[serde(rename = "alg", skip_serializing_if = "Option::is_none")]
    pub alg: Option<models::AlgEnum>,
}

impl CertificateGenerationRequest {
    /// Certificate generation parameters
    pub fn new(common_name: String, validity_days: i32) -> CertificateGenerationRequest {
        CertificateGenerationRequest {
            common_name,
            subject_alt_name: None,
            validity_days,
            alg: None,
        }
    }
}
