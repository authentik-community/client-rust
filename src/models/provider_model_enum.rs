/*
 * authentik
 *
 * Making authentication simple.
 *
 * The version of the OpenAPI document: 2025.6.0
 * Contact: hello@goauthentik.io
 * Generated by: https://openapi-generator.tech
 */

use crate::models;
use serde::{Deserialize, Serialize};

///
#[derive(Clone, Copy, Debug, Eq, PartialEq, Ord, PartialOrd, Hash, Serialize, Deserialize)]
pub enum ProviderModelEnum {
    #[serde(rename = "authentik_providers_google_workspace.googleworkspaceprovider")]
    AuthentikProvidersGoogleWorkspaceGoogleworkspaceprovider,
    #[serde(rename = "authentik_providers_ldap.ldapprovider")]
    AuthentikProvidersLdapLdapprovider,
    #[serde(rename = "authentik_providers_microsoft_entra.microsoftentraprovider")]
    AuthentikProvidersMicrosoftEntraMicrosoftentraprovider,
    #[serde(rename = "authentik_providers_oauth2.oauth2provider")]
    AuthentikProvidersOauth2Oauth2provider,
    #[serde(rename = "authentik_providers_proxy.proxyprovider")]
    AuthentikProvidersProxyProxyprovider,
    #[serde(rename = "authentik_providers_rac.racprovider")]
    AuthentikProvidersRacRacprovider,
    #[serde(rename = "authentik_providers_radius.radiusprovider")]
    AuthentikProvidersRadiusRadiusprovider,
    #[serde(rename = "authentik_providers_saml.samlprovider")]
    AuthentikProvidersSamlSamlprovider,
    #[serde(rename = "authentik_providers_scim.scimprovider")]
    AuthentikProvidersScimScimprovider,
    #[serde(rename = "authentik_providers_ssf.ssfprovider")]
    AuthentikProvidersSsfSsfprovider,
}

impl std::fmt::Display for ProviderModelEnum {
    fn fmt(&self, f: &mut std::fmt::Formatter) -> std::fmt::Result {
        match self {
            Self::AuthentikProvidersGoogleWorkspaceGoogleworkspaceprovider => {
                write!(f, "authentik_providers_google_workspace.googleworkspaceprovider")
            }
            Self::AuthentikProvidersLdapLdapprovider => write!(f, "authentik_providers_ldap.ldapprovider"),
            Self::AuthentikProvidersMicrosoftEntraMicrosoftentraprovider => {
                write!(f, "authentik_providers_microsoft_entra.microsoftentraprovider")
            }
            Self::AuthentikProvidersOauth2Oauth2provider => write!(f, "authentik_providers_oauth2.oauth2provider"),
            Self::AuthentikProvidersProxyProxyprovider => write!(f, "authentik_providers_proxy.proxyprovider"),
            Self::AuthentikProvidersRacRacprovider => write!(f, "authentik_providers_rac.racprovider"),
            Self::AuthentikProvidersRadiusRadiusprovider => write!(f, "authentik_providers_radius.radiusprovider"),
            Self::AuthentikProvidersSamlSamlprovider => write!(f, "authentik_providers_saml.samlprovider"),
            Self::AuthentikProvidersScimScimprovider => write!(f, "authentik_providers_scim.scimprovider"),
            Self::AuthentikProvidersSsfSsfprovider => write!(f, "authentik_providers_ssf.ssfprovider"),
        }
    }
}

impl Default for ProviderModelEnum {
    fn default() -> ProviderModelEnum {
        Self::AuthentikProvidersGoogleWorkspaceGoogleworkspaceprovider
    }
}
