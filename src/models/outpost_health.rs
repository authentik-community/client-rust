/*
 * authentik
 *
 * Making authentication simple.
 *
 * The version of the OpenAPI document: 2025.2.0
 * Contact: hello@goauthentik.io
 * Generated by: https://openapi-generator.tech
 */

use crate::models;
use serde::{Deserialize, Serialize};

/// OutpostHealth : Outpost health status
#[derive(Clone, Default, Debug, PartialEq, Serialize, Deserialize)]
pub struct OutpostHealth {
    #[serde(rename = "uid")]
    pub uid: String,
    #[serde(rename = "last_seen")]
    pub last_seen: String,
    #[serde(rename = "version")]
    pub version: String,
    #[serde(rename = "golang_version")]
    pub golang_version: String,
    #[serde(rename = "openssl_enabled")]
    pub openssl_enabled: bool,
    #[serde(rename = "openssl_version")]
    pub openssl_version: String,
    /// Get FIPS enabled
    #[serde(rename = "fips_enabled", deserialize_with = "Option::deserialize")]
    pub fips_enabled: Option<bool>,
    #[serde(rename = "version_should")]
    pub version_should: String,
    #[serde(rename = "version_outdated")]
    pub version_outdated: bool,
    #[serde(rename = "build_hash")]
    pub build_hash: String,
    #[serde(rename = "build_hash_should")]
    pub build_hash_should: String,
    #[serde(rename = "hostname")]
    pub hostname: String,
}

impl OutpostHealth {
    /// Outpost health status
    pub fn new(
        uid: String,
        last_seen: String,
        version: String,
        golang_version: String,
        openssl_enabled: bool,
        openssl_version: String,
        fips_enabled: Option<bool>,
        version_should: String,
        version_outdated: bool,
        build_hash: String,
        build_hash_should: String,
        hostname: String,
    ) -> OutpostHealth {
        OutpostHealth {
            uid,
            last_seen,
            version,
            golang_version,
            openssl_enabled,
            openssl_version,
            fips_enabled,
            version_should,
            version_outdated,
            build_hash,
            build_hash_should,
            hostname,
        }
    }
}
