/*
 * authentik
 *
 * Making authentication simple.
 *
 * The version of the OpenAPI document: 2025.2.3
 * Contact: hello@goauthentik.io
 * Generated by: https://openapi-generator.tech
 */

use crate::models;
use serde::{Deserialize, Serialize};

///
#[derive(Clone, Copy, Debug, Eq, PartialEq, Ord, PartialOrd, Hash, Serialize, Deserialize)]
pub enum ModelEnum {
    #[serde(rename = "authentik_tenants.domain")]
    AuthentikTenantsDomain,
    #[serde(rename = "authentik_crypto.certificatekeypair")]
    AuthentikCryptoCertificatekeypair,
    #[serde(rename = "authentik_flows.flow")]
    AuthentikFlowsFlow,
    #[serde(rename = "authentik_flows.flowstagebinding")]
    AuthentikFlowsFlowstagebinding,
    #[serde(rename = "authentik_outposts.dockerserviceconnection")]
    AuthentikOutpostsDockerserviceconnection,
    #[serde(rename = "authentik_outposts.kubernetesserviceconnection")]
    AuthentikOutpostsKubernetesserviceconnection,
    #[serde(rename = "authentik_outposts.outpost")]
    AuthentikOutpostsOutpost,
    #[serde(rename = "authentik_policies_dummy.dummypolicy")]
    AuthentikPoliciesDummyDummypolicy,
    #[serde(rename = "authentik_policies_event_matcher.eventmatcherpolicy")]
    AuthentikPoliciesEventMatcherEventmatcherpolicy,
    #[serde(rename = "authentik_policies_expiry.passwordexpirypolicy")]
    AuthentikPoliciesExpiryPasswordexpirypolicy,
    #[serde(rename = "authentik_policies_expression.expressionpolicy")]
    AuthentikPoliciesExpressionExpressionpolicy,
    #[serde(rename = "authentik_policies_geoip.geoippolicy")]
    AuthentikPoliciesGeoipGeoippolicy,
    #[serde(rename = "authentik_policies_password.passwordpolicy")]
    AuthentikPoliciesPasswordPasswordpolicy,
    #[serde(rename = "authentik_policies_reputation.reputationpolicy")]
    AuthentikPoliciesReputationReputationpolicy,
    #[serde(rename = "authentik_policies.policybinding")]
    AuthentikPoliciesPolicybinding,
    #[serde(rename = "authentik_providers_ldap.ldapprovider")]
    AuthentikProvidersLdapLdapprovider,
    #[serde(rename = "authentik_providers_oauth2.scopemapping")]
    AuthentikProvidersOauth2Scopemapping,
    #[serde(rename = "authentik_providers_oauth2.oauth2provider")]
    AuthentikProvidersOauth2Oauth2provider,
    #[serde(rename = "authentik_providers_proxy.proxyprovider")]
    AuthentikProvidersProxyProxyprovider,
    #[serde(rename = "authentik_providers_rac.racprovider")]
    AuthentikProvidersRacRacprovider,
    #[serde(rename = "authentik_providers_rac.endpoint")]
    AuthentikProvidersRacEndpoint,
    #[serde(rename = "authentik_providers_rac.racpropertymapping")]
    AuthentikProvidersRacRacpropertymapping,
    #[serde(rename = "authentik_providers_radius.radiusprovider")]
    AuthentikProvidersRadiusRadiusprovider,
    #[serde(rename = "authentik_providers_radius.radiusproviderpropertymapping")]
    AuthentikProvidersRadiusRadiusproviderpropertymapping,
    #[serde(rename = "authentik_providers_saml.samlprovider")]
    AuthentikProvidersSamlSamlprovider,
    #[serde(rename = "authentik_providers_saml.samlpropertymapping")]
    AuthentikProvidersSamlSamlpropertymapping,
    #[serde(rename = "authentik_providers_scim.scimprovider")]
    AuthentikProvidersScimScimprovider,
    #[serde(rename = "authentik_providers_scim.scimmapping")]
    AuthentikProvidersScimScimmapping,
    #[serde(rename = "authentik_rbac.role")]
    AuthentikRbacRole,
    #[serde(rename = "authentik_sources_kerberos.kerberossource")]
    AuthentikSourcesKerberosKerberossource,
    #[serde(rename = "authentik_sources_kerberos.kerberossourcepropertymapping")]
    AuthentikSourcesKerberosKerberossourcepropertymapping,
    #[serde(rename = "authentik_sources_kerberos.userkerberossourceconnection")]
    AuthentikSourcesKerberosUserkerberossourceconnection,
    #[serde(rename = "authentik_sources_kerberos.groupkerberossourceconnection")]
    AuthentikSourcesKerberosGroupkerberossourceconnection,
    #[serde(rename = "authentik_sources_ldap.ldapsource")]
    AuthentikSourcesLdapLdapsource,
    #[serde(rename = "authentik_sources_ldap.ldapsourcepropertymapping")]
    AuthentikSourcesLdapLdapsourcepropertymapping,
    #[serde(rename = "authentik_sources_oauth.oauthsource")]
    AuthentikSourcesOauthOauthsource,
    #[serde(rename = "authentik_sources_oauth.oauthsourcepropertymapping")]
    AuthentikSourcesOauthOauthsourcepropertymapping,
    #[serde(rename = "authentik_sources_oauth.useroauthsourceconnection")]
    AuthentikSourcesOauthUseroauthsourceconnection,
    #[serde(rename = "authentik_sources_oauth.groupoauthsourceconnection")]
    AuthentikSourcesOauthGroupoauthsourceconnection,
    #[serde(rename = "authentik_sources_plex.plexsource")]
    AuthentikSourcesPlexPlexsource,
    #[serde(rename = "authentik_sources_plex.plexsourcepropertymapping")]
    AuthentikSourcesPlexPlexsourcepropertymapping,
    #[serde(rename = "authentik_sources_plex.userplexsourceconnection")]
    AuthentikSourcesPlexUserplexsourceconnection,
    #[serde(rename = "authentik_sources_plex.groupplexsourceconnection")]
    AuthentikSourcesPlexGroupplexsourceconnection,
    #[serde(rename = "authentik_sources_saml.samlsource")]
    AuthentikSourcesSamlSamlsource,
    #[serde(rename = "authentik_sources_saml.samlsourcepropertymapping")]
    AuthentikSourcesSamlSamlsourcepropertymapping,
    #[serde(rename = "authentik_sources_saml.usersamlsourceconnection")]
    AuthentikSourcesSamlUsersamlsourceconnection,
    #[serde(rename = "authentik_sources_saml.groupsamlsourceconnection")]
    AuthentikSourcesSamlGroupsamlsourceconnection,
    #[serde(rename = "authentik_sources_scim.scimsource")]
    AuthentikSourcesScimScimsource,
    #[serde(rename = "authentik_sources_scim.scimsourcepropertymapping")]
    AuthentikSourcesScimScimsourcepropertymapping,
    #[serde(rename = "authentik_stages_authenticator_duo.authenticatorduostage")]
    AuthentikStagesAuthenticatorDuoAuthenticatorduostage,
    #[serde(rename = "authentik_stages_authenticator_duo.duodevice")]
    AuthentikStagesAuthenticatorDuoDuodevice,
    #[serde(rename = "authentik_stages_authenticator_email.authenticatoremailstage")]
    AuthentikStagesAuthenticatorEmailAuthenticatoremailstage,
    #[serde(rename = "authentik_stages_authenticator_email.emaildevice")]
    AuthentikStagesAuthenticatorEmailEmaildevice,
    #[serde(rename = "authentik_stages_authenticator_sms.authenticatorsmsstage")]
    AuthentikStagesAuthenticatorSmsAuthenticatorsmsstage,
    #[serde(rename = "authentik_stages_authenticator_sms.smsdevice")]
    AuthentikStagesAuthenticatorSmsSmsdevice,
    #[serde(rename = "authentik_stages_authenticator_static.authenticatorstaticstage")]
    AuthentikStagesAuthenticatorStaticAuthenticatorstaticstage,
    #[serde(rename = "authentik_stages_authenticator_static.staticdevice")]
    AuthentikStagesAuthenticatorStaticStaticdevice,
    #[serde(rename = "authentik_stages_authenticator_totp.authenticatortotpstage")]
    AuthentikStagesAuthenticatorTotpAuthenticatortotpstage,
    #[serde(rename = "authentik_stages_authenticator_totp.totpdevice")]
    AuthentikStagesAuthenticatorTotpTotpdevice,
    #[serde(rename = "authentik_stages_authenticator_validate.authenticatorvalidatestage")]
    AuthentikStagesAuthenticatorValidateAuthenticatorvalidatestage,
    #[serde(rename = "authentik_stages_authenticator_webauthn.authenticatorwebauthnstage")]
    AuthentikStagesAuthenticatorWebauthnAuthenticatorwebauthnstage,
    #[serde(rename = "authentik_stages_authenticator_webauthn.webauthndevice")]
    AuthentikStagesAuthenticatorWebauthnWebauthndevice,
    #[serde(rename = "authentik_stages_captcha.captchastage")]
    AuthentikStagesCaptchaCaptchastage,
    #[serde(rename = "authentik_stages_consent.consentstage")]
    AuthentikStagesConsentConsentstage,
    #[serde(rename = "authentik_stages_consent.userconsent")]
    AuthentikStagesConsentUserconsent,
    #[serde(rename = "authentik_stages_deny.denystage")]
    AuthentikStagesDenyDenystage,
    #[serde(rename = "authentik_stages_dummy.dummystage")]
    AuthentikStagesDummyDummystage,
    #[serde(rename = "authentik_stages_email.emailstage")]
    AuthentikStagesEmailEmailstage,
    #[serde(rename = "authentik_stages_identification.identificationstage")]
    AuthentikStagesIdentificationIdentificationstage,
    #[serde(rename = "authentik_stages_invitation.invitationstage")]
    AuthentikStagesInvitationInvitationstage,
    #[serde(rename = "authentik_stages_invitation.invitation")]
    AuthentikStagesInvitationInvitation,
    #[serde(rename = "authentik_stages_password.passwordstage")]
    AuthentikStagesPasswordPasswordstage,
    #[serde(rename = "authentik_stages_prompt.prompt")]
    AuthentikStagesPromptPrompt,
    #[serde(rename = "authentik_stages_prompt.promptstage")]
    AuthentikStagesPromptPromptstage,
    #[serde(rename = "authentik_stages_redirect.redirectstage")]
    AuthentikStagesRedirectRedirectstage,
    #[serde(rename = "authentik_stages_user_delete.userdeletestage")]
    AuthentikStagesUserDeleteUserdeletestage,
    #[serde(rename = "authentik_stages_user_login.userloginstage")]
    AuthentikStagesUserLoginUserloginstage,
    #[serde(rename = "authentik_stages_user_logout.userlogoutstage")]
    AuthentikStagesUserLogoutUserlogoutstage,
    #[serde(rename = "authentik_stages_user_write.userwritestage")]
    AuthentikStagesUserWriteUserwritestage,
    #[serde(rename = "authentik_brands.brand")]
    AuthentikBrandsBrand,
    #[serde(rename = "authentik_blueprints.blueprintinstance")]
    AuthentikBlueprintsBlueprintinstance,
    #[serde(rename = "authentik_core.group")]
    AuthentikCoreGroup,
    #[serde(rename = "authentik_core.user")]
    AuthentikCoreUser,
    #[serde(rename = "authentik_core.application")]
    AuthentikCoreApplication,
    #[serde(rename = "authentik_core.applicationentitlement")]
    AuthentikCoreApplicationentitlement,
    #[serde(rename = "authentik_core.token")]
    AuthentikCoreToken,
    #[serde(rename = "authentik_enterprise.license")]
    AuthentikEnterpriseLicense,
    #[serde(rename = "authentik_providers_google_workspace.googleworkspaceprovider")]
    AuthentikProvidersGoogleWorkspaceGoogleworkspaceprovider,
    #[serde(rename = "authentik_providers_google_workspace.googleworkspaceprovidermapping")]
    AuthentikProvidersGoogleWorkspaceGoogleworkspaceprovidermapping,
    #[serde(rename = "authentik_providers_microsoft_entra.microsoftentraprovider")]
    AuthentikProvidersMicrosoftEntraMicrosoftentraprovider,
    #[serde(rename = "authentik_providers_microsoft_entra.microsoftentraprovidermapping")]
    AuthentikProvidersMicrosoftEntraMicrosoftentraprovidermapping,
    #[serde(rename = "authentik_providers_ssf.ssfprovider")]
    AuthentikProvidersSsfSsfprovider,
    #[serde(rename = "authentik_stages_authenticator_endpoint_gdtc.authenticatorendpointgdtcstage")]
    AuthentikStagesAuthenticatorEndpointGdtcAuthenticatorendpointgdtcstage,
    #[serde(rename = "authentik_stages_source.sourcestage")]
    AuthentikStagesSourceSourcestage,
    #[serde(rename = "authentik_events.event")]
    AuthentikEventsEvent,
    #[serde(rename = "authentik_events.notificationtransport")]
    AuthentikEventsNotificationtransport,
    #[serde(rename = "authentik_events.notification")]
    AuthentikEventsNotification,
    #[serde(rename = "authentik_events.notificationrule")]
    AuthentikEventsNotificationrule,
    #[serde(rename = "authentik_events.notificationwebhookmapping")]
    AuthentikEventsNotificationwebhookmapping,
}

impl std::fmt::Display for ModelEnum {
    fn fmt(&self, f: &mut std::fmt::Formatter) -> std::fmt::Result {
        match self {
            Self::AuthentikTenantsDomain => write!(f, "authentik_tenants.domain"),
            Self::AuthentikCryptoCertificatekeypair => write!(f, "authentik_crypto.certificatekeypair"),
            Self::AuthentikFlowsFlow => write!(f, "authentik_flows.flow"),
            Self::AuthentikFlowsFlowstagebinding => write!(f, "authentik_flows.flowstagebinding"),
            Self::AuthentikOutpostsDockerserviceconnection => write!(f, "authentik_outposts.dockerserviceconnection"),
            Self::AuthentikOutpostsKubernetesserviceconnection => {
                write!(f, "authentik_outposts.kubernetesserviceconnection")
            }
            Self::AuthentikOutpostsOutpost => write!(f, "authentik_outposts.outpost"),
            Self::AuthentikPoliciesDummyDummypolicy => write!(f, "authentik_policies_dummy.dummypolicy"),
            Self::AuthentikPoliciesEventMatcherEventmatcherpolicy => {
                write!(f, "authentik_policies_event_matcher.eventmatcherpolicy")
            }
            Self::AuthentikPoliciesExpiryPasswordexpirypolicy => {
                write!(f, "authentik_policies_expiry.passwordexpirypolicy")
            }
            Self::AuthentikPoliciesExpressionExpressionpolicy => {
                write!(f, "authentik_policies_expression.expressionpolicy")
            }
            Self::AuthentikPoliciesGeoipGeoippolicy => write!(f, "authentik_policies_geoip.geoippolicy"),
            Self::AuthentikPoliciesPasswordPasswordpolicy => write!(f, "authentik_policies_password.passwordpolicy"),
            Self::AuthentikPoliciesReputationReputationpolicy => {
                write!(f, "authentik_policies_reputation.reputationpolicy")
            }
            Self::AuthentikPoliciesPolicybinding => write!(f, "authentik_policies.policybinding"),
            Self::AuthentikProvidersLdapLdapprovider => write!(f, "authentik_providers_ldap.ldapprovider"),
            Self::AuthentikProvidersOauth2Scopemapping => write!(f, "authentik_providers_oauth2.scopemapping"),
            Self::AuthentikProvidersOauth2Oauth2provider => write!(f, "authentik_providers_oauth2.oauth2provider"),
            Self::AuthentikProvidersProxyProxyprovider => write!(f, "authentik_providers_proxy.proxyprovider"),
            Self::AuthentikProvidersRacRacprovider => write!(f, "authentik_providers_rac.racprovider"),
            Self::AuthentikProvidersRacEndpoint => write!(f, "authentik_providers_rac.endpoint"),
            Self::AuthentikProvidersRacRacpropertymapping => write!(f, "authentik_providers_rac.racpropertymapping"),
            Self::AuthentikProvidersRadiusRadiusprovider => write!(f, "authentik_providers_radius.radiusprovider"),
            Self::AuthentikProvidersRadiusRadiusproviderpropertymapping => {
                write!(f, "authentik_providers_radius.radiusproviderpropertymapping")
            }
            Self::AuthentikProvidersSamlSamlprovider => write!(f, "authentik_providers_saml.samlprovider"),
            Self::AuthentikProvidersSamlSamlpropertymapping => {
                write!(f, "authentik_providers_saml.samlpropertymapping")
            }
            Self::AuthentikProvidersScimScimprovider => write!(f, "authentik_providers_scim.scimprovider"),
            Self::AuthentikProvidersScimScimmapping => write!(f, "authentik_providers_scim.scimmapping"),
            Self::AuthentikRbacRole => write!(f, "authentik_rbac.role"),
            Self::AuthentikSourcesKerberosKerberossource => write!(f, "authentik_sources_kerberos.kerberossource"),
            Self::AuthentikSourcesKerberosKerberossourcepropertymapping => {
                write!(f, "authentik_sources_kerberos.kerberossourcepropertymapping")
            }
            Self::AuthentikSourcesKerberosUserkerberossourceconnection => {
                write!(f, "authentik_sources_kerberos.userkerberossourceconnection")
            }
            Self::AuthentikSourcesKerberosGroupkerberossourceconnection => {
                write!(f, "authentik_sources_kerberos.groupkerberossourceconnection")
            }
            Self::AuthentikSourcesLdapLdapsource => write!(f, "authentik_sources_ldap.ldapsource"),
            Self::AuthentikSourcesLdapLdapsourcepropertymapping => {
                write!(f, "authentik_sources_ldap.ldapsourcepropertymapping")
            }
            Self::AuthentikSourcesOauthOauthsource => write!(f, "authentik_sources_oauth.oauthsource"),
            Self::AuthentikSourcesOauthOauthsourcepropertymapping => {
                write!(f, "authentik_sources_oauth.oauthsourcepropertymapping")
            }
            Self::AuthentikSourcesOauthUseroauthsourceconnection => {
                write!(f, "authentik_sources_oauth.useroauthsourceconnection")
            }
            Self::AuthentikSourcesOauthGroupoauthsourceconnection => {
                write!(f, "authentik_sources_oauth.groupoauthsourceconnection")
            }
            Self::AuthentikSourcesPlexPlexsource => write!(f, "authentik_sources_plex.plexsource"),
            Self::AuthentikSourcesPlexPlexsourcepropertymapping => {
                write!(f, "authentik_sources_plex.plexsourcepropertymapping")
            }
            Self::AuthentikSourcesPlexUserplexsourceconnection => {
                write!(f, "authentik_sources_plex.userplexsourceconnection")
            }
            Self::AuthentikSourcesPlexGroupplexsourceconnection => {
                write!(f, "authentik_sources_plex.groupplexsourceconnection")
            }
            Self::AuthentikSourcesSamlSamlsource => write!(f, "authentik_sources_saml.samlsource"),
            Self::AuthentikSourcesSamlSamlsourcepropertymapping => {
                write!(f, "authentik_sources_saml.samlsourcepropertymapping")
            }
            Self::AuthentikSourcesSamlUsersamlsourceconnection => {
                write!(f, "authentik_sources_saml.usersamlsourceconnection")
            }
            Self::AuthentikSourcesSamlGroupsamlsourceconnection => {
                write!(f, "authentik_sources_saml.groupsamlsourceconnection")
            }
            Self::AuthentikSourcesScimScimsource => write!(f, "authentik_sources_scim.scimsource"),
            Self::AuthentikSourcesScimScimsourcepropertymapping => {
                write!(f, "authentik_sources_scim.scimsourcepropertymapping")
            }
            Self::AuthentikStagesAuthenticatorDuoAuthenticatorduostage => {
                write!(f, "authentik_stages_authenticator_duo.authenticatorduostage")
            }
            Self::AuthentikStagesAuthenticatorDuoDuodevice => write!(f, "authentik_stages_authenticator_duo.duodevice"),
            Self::AuthentikStagesAuthenticatorEmailAuthenticatoremailstage => {
                write!(f, "authentik_stages_authenticator_email.authenticatoremailstage")
            }
            Self::AuthentikStagesAuthenticatorEmailEmaildevice => {
                write!(f, "authentik_stages_authenticator_email.emaildevice")
            }
            Self::AuthentikStagesAuthenticatorSmsAuthenticatorsmsstage => {
                write!(f, "authentik_stages_authenticator_sms.authenticatorsmsstage")
            }
            Self::AuthentikStagesAuthenticatorSmsSmsdevice => write!(f, "authentik_stages_authenticator_sms.smsdevice"),
            Self::AuthentikStagesAuthenticatorStaticAuthenticatorstaticstage => {
                write!(f, "authentik_stages_authenticator_static.authenticatorstaticstage")
            }
            Self::AuthentikStagesAuthenticatorStaticStaticdevice => {
                write!(f, "authentik_stages_authenticator_static.staticdevice")
            }
            Self::AuthentikStagesAuthenticatorTotpAuthenticatortotpstage => {
                write!(f, "authentik_stages_authenticator_totp.authenticatortotpstage")
            }
            Self::AuthentikStagesAuthenticatorTotpTotpdevice => {
                write!(f, "authentik_stages_authenticator_totp.totpdevice")
            }
            Self::AuthentikStagesAuthenticatorValidateAuthenticatorvalidatestage => {
                write!(f, "authentik_stages_authenticator_validate.authenticatorvalidatestage")
            }
            Self::AuthentikStagesAuthenticatorWebauthnAuthenticatorwebauthnstage => {
                write!(f, "authentik_stages_authenticator_webauthn.authenticatorwebauthnstage")
            }
            Self::AuthentikStagesAuthenticatorWebauthnWebauthndevice => {
                write!(f, "authentik_stages_authenticator_webauthn.webauthndevice")
            }
            Self::AuthentikStagesCaptchaCaptchastage => write!(f, "authentik_stages_captcha.captchastage"),
            Self::AuthentikStagesConsentConsentstage => write!(f, "authentik_stages_consent.consentstage"),
            Self::AuthentikStagesConsentUserconsent => write!(f, "authentik_stages_consent.userconsent"),
            Self::AuthentikStagesDenyDenystage => write!(f, "authentik_stages_deny.denystage"),
            Self::AuthentikStagesDummyDummystage => write!(f, "authentik_stages_dummy.dummystage"),
            Self::AuthentikStagesEmailEmailstage => write!(f, "authentik_stages_email.emailstage"),
            Self::AuthentikStagesIdentificationIdentificationstage => {
                write!(f, "authentik_stages_identification.identificationstage")
            }
            Self::AuthentikStagesInvitationInvitationstage => write!(f, "authentik_stages_invitation.invitationstage"),
            Self::AuthentikStagesInvitationInvitation => write!(f, "authentik_stages_invitation.invitation"),
            Self::AuthentikStagesPasswordPasswordstage => write!(f, "authentik_stages_password.passwordstage"),
            Self::AuthentikStagesPromptPrompt => write!(f, "authentik_stages_prompt.prompt"),
            Self::AuthentikStagesPromptPromptstage => write!(f, "authentik_stages_prompt.promptstage"),
            Self::AuthentikStagesRedirectRedirectstage => write!(f, "authentik_stages_redirect.redirectstage"),
            Self::AuthentikStagesUserDeleteUserdeletestage => write!(f, "authentik_stages_user_delete.userdeletestage"),
            Self::AuthentikStagesUserLoginUserloginstage => write!(f, "authentik_stages_user_login.userloginstage"),
            Self::AuthentikStagesUserLogoutUserlogoutstage => write!(f, "authentik_stages_user_logout.userlogoutstage"),
            Self::AuthentikStagesUserWriteUserwritestage => write!(f, "authentik_stages_user_write.userwritestage"),
            Self::AuthentikBrandsBrand => write!(f, "authentik_brands.brand"),
            Self::AuthentikBlueprintsBlueprintinstance => write!(f, "authentik_blueprints.blueprintinstance"),
            Self::AuthentikCoreGroup => write!(f, "authentik_core.group"),
            Self::AuthentikCoreUser => write!(f, "authentik_core.user"),
            Self::AuthentikCoreApplication => write!(f, "authentik_core.application"),
            Self::AuthentikCoreApplicationentitlement => write!(f, "authentik_core.applicationentitlement"),
            Self::AuthentikCoreToken => write!(f, "authentik_core.token"),
            Self::AuthentikEnterpriseLicense => write!(f, "authentik_enterprise.license"),
            Self::AuthentikProvidersGoogleWorkspaceGoogleworkspaceprovider => {
                write!(f, "authentik_providers_google_workspace.googleworkspaceprovider")
            }
            Self::AuthentikProvidersGoogleWorkspaceGoogleworkspaceprovidermapping => {
                write!(f, "authentik_providers_google_workspace.googleworkspaceprovidermapping")
            }
            Self::AuthentikProvidersMicrosoftEntraMicrosoftentraprovider => {
                write!(f, "authentik_providers_microsoft_entra.microsoftentraprovider")
            }
            Self::AuthentikProvidersMicrosoftEntraMicrosoftentraprovidermapping => {
                write!(f, "authentik_providers_microsoft_entra.microsoftentraprovidermapping")
            }
            Self::AuthentikProvidersSsfSsfprovider => write!(f, "authentik_providers_ssf.ssfprovider"),
            Self::AuthentikStagesAuthenticatorEndpointGdtcAuthenticatorendpointgdtcstage => write!(
                f,
                "authentik_stages_authenticator_endpoint_gdtc.authenticatorendpointgdtcstage"
            ),
            Self::AuthentikStagesSourceSourcestage => write!(f, "authentik_stages_source.sourcestage"),
            Self::AuthentikEventsEvent => write!(f, "authentik_events.event"),
            Self::AuthentikEventsNotificationtransport => write!(f, "authentik_events.notificationtransport"),
            Self::AuthentikEventsNotification => write!(f, "authentik_events.notification"),
            Self::AuthentikEventsNotificationrule => write!(f, "authentik_events.notificationrule"),
            Self::AuthentikEventsNotificationwebhookmapping => write!(f, "authentik_events.notificationwebhookmapping"),
        }
    }
}

impl Default for ModelEnum {
    fn default() -> ModelEnum {
        Self::AuthentikTenantsDomain
    }
}
