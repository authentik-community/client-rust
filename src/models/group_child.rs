/*
 * authentik
 *
 * Making authentication simple.
 *
 * The version of the OpenAPI document: 2025.8.0-rc7
 * Contact: hello@goauthentik.io
 * Generated by: https://openapi-generator.tech
 */

use crate::models;
use serde::{Deserialize, Serialize};

/// GroupChild : Stripped down group serializer to show relevant children for groups
#[derive(Clone, Default, Debug, PartialEq, Serialize, Deserialize)]
pub struct GroupChild {
    #[serde(rename = "pk")]
    pub pk: uuid::Uuid,
    #[serde(rename = "name")]
    pub name: String,
    /// Users added to this group will be superusers.
    #[serde(rename = "is_superuser", skip_serializing_if = "Option::is_none")]
    pub is_superuser: Option<bool>,
    #[serde(rename = "attributes", skip_serializing_if = "Option::is_none")]
    pub attributes: Option<std::collections::HashMap<String, serde_json::Value>>,
    #[serde(rename = "group_uuid")]
    pub group_uuid: uuid::Uuid,
}

impl GroupChild {
    /// Stripped down group serializer to show relevant children for groups
    pub fn new(pk: uuid::Uuid, name: String, group_uuid: uuid::Uuid) -> GroupChild {
        GroupChild {
            pk,
            name,
            is_superuser: None,
            attributes: None,
            group_uuid,
        }
    }
}
