/*
 * authentik
 *
 * Making authentication simple.
 *
 * The version of the OpenAPI document: 2025.8.0-rc7
 * Contact: hello@goauthentik.io
 * Generated by: https://openapi-generator.tech
 */

use crate::models;
use serde::{Deserialize, Serialize};

/// PatchedNotificationTransportRequest : NotificationTransport Serializer
#[derive(Clone, Default, Debug, PartialEq, Serialize, Deserialize)]
pub struct PatchedNotificationTransportRequest {
    #[serde(rename = "name", skip_serializing_if = "Option::is_none")]
    pub name: Option<String>,
    #[serde(rename = "mode", skip_serializing_if = "Option::is_none")]
    pub mode: Option<models::NotificationTransportModeEnum>,
    #[serde(rename = "webhook_url", skip_serializing_if = "Option::is_none")]
    pub webhook_url: Option<String>,
    /// Customize the body of the request. Mapping should return data that is JSON-serializable.
    #[serde(
        rename = "webhook_mapping_body",
        default,
        with = "::serde_with::rust::double_option",
        skip_serializing_if = "Option::is_none"
    )]
    pub webhook_mapping_body: Option<Option<uuid::Uuid>>,
    /// Configure additional headers to be sent. Mapping should return a dictionary of key-value pairs
    #[serde(
        rename = "webhook_mapping_headers",
        default,
        with = "::serde_with::rust::double_option",
        skip_serializing_if = "Option::is_none"
    )]
    pub webhook_mapping_headers: Option<Option<uuid::Uuid>>,
    #[serde(rename = "email_subject_prefix", skip_serializing_if = "Option::is_none")]
    pub email_subject_prefix: Option<String>,
    #[serde(rename = "email_template", skip_serializing_if = "Option::is_none")]
    pub email_template: Option<String>,
    /// Only send notification once, for example when sending a webhook into a chat channel.
    #[serde(rename = "send_once", skip_serializing_if = "Option::is_none")]
    pub send_once: Option<bool>,
}

impl PatchedNotificationTransportRequest {
    /// NotificationTransport Serializer
    pub fn new() -> PatchedNotificationTransportRequest {
        PatchedNotificationTransportRequest {
            name: None,
            mode: None,
            webhook_url: None,
            webhook_mapping_body: None,
            webhook_mapping_headers: None,
            email_subject_prefix: None,
            email_template: None,
            send_once: None,
        }
    }
}
