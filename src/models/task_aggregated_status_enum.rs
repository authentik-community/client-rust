/*
 * authentik
 *
 * Making authentication simple.
 *
 * The version of the OpenAPI document: 2025.10.0-rc1
 * Contact: hello@goauthentik.io
 * Generated by: https://openapi-generator.tech
 */

use crate::models;
use serde::{Deserialize, Serialize};

///
#[derive(Clone, Copy, Debug, Eq, PartialEq, Ord, PartialOrd, Hash, Serialize, Deserialize)]
pub enum TaskAggregatedStatusEnum {
    #[serde(rename = "queued")]
    Queued,
    #[serde(rename = "consumed")]
    Consumed,
    #[serde(rename = "preprocess")]
    Preprocess,
    #[serde(rename = "running")]
    Running,
    #[serde(rename = "postprocess")]
    Postprocess,
    #[serde(rename = "rejected")]
    Rejected,
    #[serde(rename = "done")]
    Done,
    #[serde(rename = "info")]
    Info,
    #[serde(rename = "warning")]
    Warning,
    #[serde(rename = "error")]
    Error,
}

impl std::fmt::Display for TaskAggregatedStatusEnum {
    fn fmt(&self, f: &mut std::fmt::Formatter) -> std::fmt::Result {
        match self {
            Self::Queued => write!(f, "queued"),
            Self::Consumed => write!(f, "consumed"),
            Self::Preprocess => write!(f, "preprocess"),
            Self::Running => write!(f, "running"),
            Self::Postprocess => write!(f, "postprocess"),
            Self::Rejected => write!(f, "rejected"),
            Self::Done => write!(f, "done"),
            Self::Info => write!(f, "info"),
            Self::Warning => write!(f, "warning"),
            Self::Error => write!(f, "error"),
        }
    }
}

impl Default for TaskAggregatedStatusEnum {
    fn default() -> TaskAggregatedStatusEnum {
        Self::Queued
    }
}
