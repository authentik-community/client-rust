/*
 * authentik
 *
 * Making authentication simple.
 *
 * The version of the OpenAPI document: 2025.2.1
 * Contact: hello@goauthentik.io
 * Generated by: https://openapi-generator.tech
 */

use crate::models;
use serde::{Deserialize, Serialize};

///
#[derive(Clone, Copy, Debug, Eq, PartialEq, Ord, PartialOrd, Hash, Serialize, Deserialize)]
pub enum CapabilitiesEnum {
    #[serde(rename = "can_save_media")]
    CanSaveMedia,
    #[serde(rename = "can_geo_ip")]
    CanGeoIp,
    #[serde(rename = "can_asn")]
    CanAsn,
    #[serde(rename = "can_impersonate")]
    CanImpersonate,
    #[serde(rename = "can_debug")]
    CanDebug,
    #[serde(rename = "is_enterprise")]
    IsEnterprise,
}

impl std::fmt::Display for CapabilitiesEnum {
    fn fmt(&self, f: &mut std::fmt::Formatter) -> std::fmt::Result {
        match self {
            Self::CanSaveMedia => write!(f, "can_save_media"),
            Self::CanGeoIp => write!(f, "can_geo_ip"),
            Self::CanAsn => write!(f, "can_asn"),
            Self::CanImpersonate => write!(f, "can_impersonate"),
            Self::CanDebug => write!(f, "can_debug"),
            Self::IsEnterprise => write!(f, "is_enterprise"),
        }
    }
}

impl Default for CapabilitiesEnum {
    fn default() -> CapabilitiesEnum {
        Self::CanSaveMedia
    }
}
